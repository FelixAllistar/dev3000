{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/elsigh/src/elsigh/dev-playwright/mcp-server/app/logs/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef, useMemo } from 'react';\n\ninterface LogEntry {\n  timestamp: string;\n  source: string;\n  message: string;\n  screenshot?: string;\n  original: string;\n}\n\nfunction parseLogLine(line: string): LogEntry | null {\n  const match = line.match(/\\[([^\\]]+)\\] \\[([^\\]]+)\\] (.+)/);\n  if (!match) return null;\n  \n  const [, timestamp, source, message] = match;\n  const screenshot = message.match(/\\[SCREENSHOT\\] (.+)/)?.[1];\n  \n  return {\n    timestamp,\n    source,\n    message,\n    screenshot,\n    original: line\n  };\n}\n\nfunction LogEntryComponent({ entry }: { entry: LogEntry }) {\n  return (\n    <div className=\"border-b border-gray-200 py-2 px-4\">\n      <div className=\"flex gap-4 text-sm\">\n        <span className=\"text-gray-500 font-mono whitespace-nowrap\">\n          {new Date(entry.timestamp).toLocaleTimeString()}\n        </span>\n        <span className={`font-medium uppercase text-xs px-2 py-1 rounded ${\n          entry.source === 'SERVER' ? 'bg-blue-100 text-blue-800' : 'bg-green-100 text-green-800'\n        }`}>\n          {entry.source}\n        </span>\n      </div>\n      <div className=\"mt-1 font-mono text-sm whitespace-pre-wrap\">\n        {entry.message}\n      </div>\n      {entry.screenshot && (\n        <div className=\"mt-2\">\n          <img \n            src={entry.screenshot} \n            alt=\"Screenshot\" \n            className=\"max-w-full border rounded shadow-sm\"\n            style={{ maxHeight: '300px' }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default function LogsPage() {\n  const [logs, setLogs] = useState<LogEntry[]>([]);\n  const [mode, setMode] = useState<'tail' | 'head'>('tail');\n  const [isStreaming, setIsStreaming] = useState(false);\n  const [userScrolled, setUserScrolled] = useState(false);\n  const [logFilePath, setLogFilePath] = useState<string>('');\n  const bottomRef = useRef<HTMLDivElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    loadInitialLogs();\n    loadConfig();\n  }, [mode]);\n\n  const loadConfig = async () => {\n    try {\n      const response = await fetch('/api/config');\n      const data = await response.json();\n      setLogFilePath(data.logFilePath);\n    } catch (error) {\n      console.error('Failed to load config:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (mode === 'tail' && isStreaming) {\n      startStreaming();\n    }\n  }, [mode, isStreaming]);\n\n  useEffect(() => {\n    if (mode === 'tail' && logs.length > 0 && !userScrolled) {\n      bottomRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [logs, mode, userScrolled]);\n\n  const loadInitialLogs = async () => {\n    try {\n      const response = await fetch(`/api/logs/${mode}?lines=100`);\n      const data = await response.json();\n      \n      if (data.lines) {\n        const entries = data.lines\n          .map(parseLogLine)\n          .filter((entry): entry is LogEntry => entry !== null);\n        setLogs(entries);\n      }\n    } catch (error) {\n      console.error('Failed to load logs:', error);\n    }\n  };\n\n  const startStreaming = () => {\n    const eventSource = new EventSource('/api/logs/stream');\n    \n    eventSource.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      \n      if (data.newLines) {\n        const newEntries = data.newLines\n          .map(parseLogLine)\n          .filter((entry): entry is LogEntry => entry !== null);\n        \n        setLogs(prev => [...prev, ...newEntries]);\n      }\n    };\n\n    eventSource.onerror = (error) => {\n      console.error('Streaming error:', error);\n      setIsStreaming(false);\n    };\n\n    return () => eventSource.close();\n  };\n\n  const handleScroll = (e: React.UIEvent<HTMLDivElement>) => {\n    const container = e.currentTarget;\n    const scrollTop = container.scrollTop;\n    const containerHeight = container.clientHeight;\n    const scrollHeight = container.scrollHeight;\n    \n    // Check if user scrolled away from bottom\n    const isAtBottom = scrollTop + containerHeight >= scrollHeight - 10;\n    setUserScrolled(!isAtBottom);\n  };\n\n  const scrollToBottom = () => {\n    setUserScrolled(false);\n    bottomRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 py-3\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <h1 className=\"text-2xl font-bold text-gray-900\">ðŸŽ­ Dev Playwright</h1>\n              <span className=\"text-sm text-gray-500\">{logs.length} entries</span>\n            </div>\n            \n            <div className=\"flex items-center gap-4 text-sm\">\n              <button\n                onClick={() => setMode('tail')}\n                className={`${mode === 'tail' ? 'text-blue-600 font-medium' : 'text-gray-600 hover:text-gray-900'}`}\n              >\n                Tail\n              </button>\n              <button\n                onClick={() => setMode('head')}\n                className={`${mode === 'head' ? 'text-blue-600 font-medium' : 'text-gray-600 hover:text-gray-900'}`}\n              >\n                Head\n              </button>\n              \n              {mode === 'tail' && (\n                <label className=\"flex items-center gap-1\">\n                  <input\n                    type=\"checkbox\"\n                    checked={isStreaming}\n                    onChange={(e) => setIsStreaming(e.target.checked)}\n                    className=\"w-3 h-3\"\n                  />\n                  <span className=\"text-gray-600\">Live</span>\n                </label>\n              )}\n              \n              <button\n                onClick={loadInitialLogs}\n                className=\"text-gray-600 hover:text-gray-900\"\n              >\n                Refresh\n              </button>\n              \n              <a \n                href=\"https://github.com/elsigh/dev-playwright\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-gray-600 hover:text-gray-900 transition-colors\"\n                title=\"View on GitHub\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M12 0C5.374 0 0 5.373 0 12 0 17.302 3.438 21.8 8.207 23.387c.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0112 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z\"/>\n                </svg>\n              </a>\n            </div>\n          </div>\n          \n          {logFilePath && (\n            <div className=\"mt-2 text-xs text-gray-500\">\n              ðŸ“„ <code className=\"bg-gray-100 px-1 rounded\">{logFilePath}</code>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div \n        ref={containerRef}\n        className=\"max-w-7xl mx-auto\"\n        style={{ height: 'calc(100vh - 80px)', overflow: 'auto' }}\n        onScroll={handleScroll}\n      >\n        {logs.map((entry, index) => (\n          <LogEntryComponent \n            key={index} \n            entry={entry} \n          />\n        ))}\n        \n        <div ref={bottomRef} />\n      </div>\n      \n      {userScrolled && mode === 'tail' && (\n        <button\n          onClick={scrollToBottom}\n          className=\"fixed bottom-6 right-6 bg-blue-500 text-white p-3 rounded-full shadow-lg hover:bg-blue-600 transition-all\"\n          title=\"Scroll to bottom and resume auto-scroll\"\n        >\n          â†“\n        </button>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file:///Users/elsigh/src/elsigh/dev-playwright/mcp-server/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,uIACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}}]
}